rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow read access to all items for everyone
    match /items/{itemId} {
      allow read: if true;
      
      // Allow authenticated users to create items
      allow create: if request.auth != null;
      
      // Allow users to update their own items
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.firebaseUserId ||
         request.auth.uid == resource.data.userId ||
         // Allow analytics updates from any authenticated user
         (request.auth != null && onlyAnalyticsFieldsChanged()));
      
      // Allow users to delete their own items
      allow delete: if request.auth != null && 
        (request.auth.uid == resource.data.firebaseUserId ||
         request.auth.uid == resource.data.userId);
    }
    
    // Allow users to read/write their own profiles
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read/write conversations they're part of
    match /conversations/{conversationId} {
      allow read: if request.auth != null && 
        (request.auth.uid in resource.data.participants || 
         request.auth.uid in getAfter(/databases/$(database)/documents/conversations/$(conversationId)).data.participants);
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.participants &&
        request.resource.data.participants.size() >= 2;
      allow update: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      allow delete: if false; // Conversations should not be deleted
    }
    
    // Allow authenticated users to read/write messages in their conversations
    match /messages/{messageId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || 
         request.auth.uid == resource.data.receiverId);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.senderId;
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.receiverId; // Only receiver can mark as read
      allow delete: if false; // Messages should not be deleted
    }
  }
  
  // Helper function to check if only analytics fields are being updated
  function onlyAnalyticsFieldsChanged() {
    let affectedKeys = request.resource.data.diff(resource.data).affectedKeys();
    return affectedKeys.hasOnly(['clickCount', 'videoPlays', 'saveCount', 'shareCount', 'updatedAt']);
  }
}